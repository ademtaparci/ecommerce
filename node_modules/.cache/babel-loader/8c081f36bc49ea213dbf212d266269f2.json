{"ast":null,"code":"import { ADD_TO_CART, REMOVE_TO_CART } from \"../actions/cartActions\";\nimport { cartItems } from \"../initialValues/cartItems\";\nconst initialState = {\n  cartItems: cartItems\n};\nexport default function cartReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ADD_TO_CART:\n      let product = state.cartItems.find(c => c.product.id === payload.id);\n\n      if (product) {\n        product.quantity++;\n        return { ...state\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, {\n            quantity: 1,\n            product: payload\n          }]\n        };\n      }\n\n    case REMOVE_TO_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(c => c.product.id !== payload.id)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/reactcamp/camp-project/src/store/reducers/cartReducer.js"],"names":["ADD_TO_CART","REMOVE_TO_CART","cartItems","initialState","cartReducer","state","type","payload","product","find","c","id","quantity","filter"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,wBAA5C;AACA,SAASC,SAAT,QAA0B,4BAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBD,EAAAA,SAAS,EAACA;AADO,CAArB;AAIA,eAAe,SAASE,WAAT,CAAqBC,KAAK,GAACF,YAA3B,EAAyC;AAACG,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAzC,EAAyD;AAEpE,UAAQD,IAAR;AACI,SAAKN,WAAL;AACI,UAAIQ,OAAO,GAAGH,KAAK,CAACH,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAEA,CAAC,CAACF,OAAF,CAAUG,EAAV,KAAeJ,OAAO,CAACI,EAA/C,CAAd;;AACA,UAAIH,OAAJ,EAAa;AACTA,QAAAA,OAAO,CAACI,QAAR;AACA,eAAO,EACH,GAAGP;AADA,SAAP;AAGH,OALD,MAKO;AACH,eAAO,EACH,GAAGA,KADA;AAEHH,UAAAA,SAAS,EAAC,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAoB;AAACU,YAAAA,QAAQ,EAAC,CAAV;AAAYJ,YAAAA,OAAO,EAACD;AAApB,WAApB;AAFP,SAAP;AAIH;;AACD,SAAKN,cAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHH,QAAAA,SAAS,EAACG,KAAK,CAACH,SAAN,CAAgBW,MAAhB,CAAuBH,CAAC,IAAEA,CAAC,CAACF,OAAF,CAAUG,EAAV,KAAeJ,OAAO,CAACI,EAAjD;AAFP,OAAP;;AAIR;AACI,aAAON,KAAP;AApBR;AAuBH","sourcesContent":["import { ADD_TO_CART, REMOVE_TO_CART } from \"../actions/cartActions\";\r\nimport { cartItems } from \"../initialValues/cartItems\";\r\n\r\nconst initialState = {\r\n    cartItems:cartItems\r\n}\r\n\r\nexport default function cartReducer(state=initialState, {type,payload}) {\r\n\r\n    switch (type) {\r\n        case ADD_TO_CART: \r\n            let product = state.cartItems.find(c=>c.product.id===payload.id)\r\n            if (product) {\r\n                product.quantity++;\r\n                return {\r\n                    ...state\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems:[...state.cartItems,{quantity:1,product:payload}]\r\n                }\r\n            }\r\n            case REMOVE_TO_CART:\r\n                return {\r\n                    ...state,\r\n                    cartItems:state.cartItems.filter(c=>c.product.id!==payload.id)\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n     \r\n} "]},"metadata":{},"sourceType":"module"}